{
  "id": "med-prompt-chain",
  "name": "Medical Research Prompt Chain CPN",
  "description": "A Colored Petri Net modeling the diabetes study prompt chain from med-prompt-grok.md. Each flowchart node maps to an LLM transition with appropriate token colors based on data types.",
  "colorSets": [
    "colset STRING = string;",
    "colset JSON = string;",
    "colset MARKDOWN = string;"
  ],
  "jsonSchemas": [],
  "places": [
    {
      "id": "p_city_collector",
      "name": "city_collector",
      "colorSet": "STRING",
      "position": {
        "x": 146,
        "y": 66
      }
    },
    {
      "id": "p_fetch_and_extract",
      "name": "fetch_and_extract",
      "colorSet": "JSON",
      "position": {
        "x": 640,
        "y": 80
      }
    },
    {
      "id": "p_normalizer",
      "name": "normalizer",
      "colorSet": "JSON",
      "position": {
        "x": 1160,
        "y": 80
      }
    },
    {
      "id": "p_qa_reviewer",
      "name": "qa_reviewer",
      "colorSet": "JSON",
      "position": {
        "x": 1680,
        "y": 80
      }
    },
    {
      "id": "p_comparator",
      "name": "comparator",
      "colorSet": "JSON",
      "position": {
        "x": 2200,
        "y": 80
      }
    },
    {
      "id": "p_dag_builder",
      "name": "dag_builder",
      "colorSet": "JSON",
      "position": {
        "x": 2720,
        "y": 80
      }
    },
    {
      "id": "p_sap_generator",
      "name": "sap_generator",
      "colorSet": "MARKDOWN",
      "position": {
        "x": 3240,
        "y": 80
      }
    },
    {
      "id": "p_power_calc",
      "name": "power_calc",
      "colorSet": "JSON",
      "position": {
        "x": 3760,
        "y": 80
      }
    },
    {
      "id": "p_robustness_planner",
      "name": "robustness_planner",
      "colorSet": "JSON",
      "position": {
        "x": 4280,
        "y": 80
      }
    },
    {
      "id": "p_evalue_calculator",
      "name": "evalue_calculator",
      "colorSet": "JSON",
      "position": {
        "x": 4800,
        "y": 80
      }
    },
    {
      "id": "p_diagnostics_planner",
      "name": "diagnostics_planner",
      "colorSet": "JSON",
      "position": {
        "x": 5320,
        "y": 80
      }
    },
    {
      "id": "p_asset_renderer",
      "name": "asset_renderer",
      "colorSet": "JSON",
      "position": {
        "x": 5840,
        "y": 80
      }
    },
    {
      "id": "p_factor_extractor",
      "name": "factor_extractor",
      "colorSet": "JSON",
      "position": {
        "x": 6360,
        "y": 80
      }
    },
    {
      "id": "p_correlator",
      "name": "correlator",
      "colorSet": "JSON",
      "position": {
        "x": 6880,
        "y": 80
      }
    },
    {
      "id": "p_survival",
      "name": "survival",
      "colorSet": "JSON",
      "position": {
        "x": 7400,
        "y": 80
      }
    },
    {
      "id": "p_reporter",
      "name": "reporter",
      "colorSet": "MARKDOWN",
      "position": {
        "x": 7920,
        "y": 80
      }
    }
  ],
  "transitions": [
    {
      "id": "t_city_collector",
      "name": "city_collector",
      "kind": "LLM",
      "position": {
        "x": 380,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are a meticulous health-policy research assistant. Rules:\n- Never invent data. Prefer null/\"unknown\".\n- Extract structured fields precisely as schema requires.\n- Preserve provenance: URL + ≤35-word direct quote for each non-null fact.\n- Normalize BMI: underweight (<18.5), normal (18.5–24.9), overweight (25.0–29.9), obese (≥30).\n- Normalize blood pressure: hypertension = systolic ≥140 or diastolic ≥90.\n- Visit cadence allowed: daily, weekly, biweekly, monthly, quarterly, semiannual, annual, other, unknown.\n- Medicine classes allowed: biguanide, insulin, GLP-1 RA, SGLT2i, DPP-4i, TZD, sulfonylurea, combo/other.\n- Demographic sanity: age 18–100; gender split ≈100% if reported.\n- Percentages should be fractions in [0,1] when returned as numbers.\nWhen uncertain, include the exact quote and set field to null."
          },
          {
            "type": "user",
            "text": "Task: Find official/credible sources on diabetes treatment in **{{ city }}** {{ year_range }}.\nFocus: demographics (age, gender, weight/BMI, blood pressure), medicines (names/classes),\nand hospital/clinic visit frequency for medication intake.\n\nPrefer: site:.gov, site:.edu, CDC/ADA, state health departments, large hospital systems, peer-reviewed articles, PDFs.\n\nReturn a JSON array (max 10). Output only JSON, no prose. Format exactly:\n[\n  {\"title\": \"...\", \"url\": \"...\", \"why_relevant\": \"...\"}\n]"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_fetch_and_extract",
      "name": "fetch_and_extract",
      "kind": "LLM",
      "position": {
        "x": 900,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are a meticulous health-policy research assistant. Rules:\n- Never invent data. Prefer null/\"unknown\".\n- Extract structured fields precisely as schema requires.\n- Preserve provenance: URL + ≤35-word direct quote for each non-null fact.\n- Normalize BMI: underweight (<18.5), normal (18.5–24.9), overweight (25.0–29.9), obese (≥30).\n- Normalize blood pressure: hypertension = systolic ≥140 or diastolic ≥90.\n- Visit cadence allowed: daily, weekly, biweekly, monthly, quarterly, semiannual, annual, other, unknown.\n- Medicine classes allowed: biguanide, insulin, GLP-1 RA, SGLT2i, DPP-4i, TZD, sulfonylurea, combo/other.\n- Demographic sanity: age 18–100; gender split ≈100% if reported.\n- Percentages should be fractions in [0,1] when returned as numbers.\nWhen uncertain, include the exact quote and set field to null."
          },
          {
            "type": "user",
            "text": "Extract structured data from the text. If a field is absent, set it to null.\nAdd a provenance fact (≤35 words, with URL and quote) for each non-null field.\nReturn **only JSON** (no markdown fences, no prose). Use numeric fractions in [0,1] for percentages.\n\nAllowed top-level keys only:\n[\"city\",\"sources\",\"facts\",\"n_patients\",\"age_stats\",\"gender_split\",\n \"weight_bmi\",\"blood_pressure\",\"labs\",\"meds\",\"visit_freq\",\"outcomes\"]\n\nFields to extract:\n- n_patients\n- age_stats (mean/median or bands)\n- gender_split (% male, % female; note nonbinary if present)\n- weight_bmi (distribution across BMI bands)\n- blood_pressure (systolic_mean, diastolic_mean, hypertension_rate if available)\n- labs (HbA1c_mean, fasting_glucose_mean if available)\n- meds: [{\"name\": \"...\", \"class\": \"...\", \"usage_rate\": ...}]\n- visit_freq (daily, weekly, biweekly, monthly, quarterly, semiannual, annual, other, unknown)\n- outcomes: insulin_initiation_rate, time_to_insulin (mean/median months), readmission_rate\n\nContext:\n- city: {{ city }}\n- url: {{ url }}\n- text_chunk:\n{{ text_chunk }}\n\nReturn strictly in CityObservation JSON schema."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_normalizer",
      "name": "normalizer",
      "kind": "LLM",
      "position": {
        "x": 1420,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are a meticulous health-policy research assistant. Rules:\n- Never invent data. Prefer null/\"unknown\".\n- Extract structured fields precisely as schema requires.\n- Preserve provenance: URL + ≤35-word direct quote for each non-null fact.\n- Normalize BMI: underweight (<18.5), normal (18.5–24.9), overweight (25.0–29.9), obese (≥30).\n- Normalize blood pressure: hypertension = systolic ≥140 or diastolic ≥90.\n- Visit cadence allowed: daily, weekly, biweekly, monthly, quarterly, semiannual, annual, other, unknown.\n- Medicine classes allowed: biguanide, insulin, GLP-1 RA, SGLT2i, DPP-4i, TZD, sulfonylurea, combo/other.\n- Demographic sanity: age 18–100; gender split ≈100% if reported.\n- Percentages should be fractions in [0,1] when returned as numbers.\nWhen uncertain, include the exact quote and set field to null."
          },
          {
            "type": "user",
            "text": "Normalize CityObservation fields:\n- BMI classes → underweight (<18.5), normal (18.5–24.9), overweight (25.0–29.9), obese (≥30).\n- Blood pressure → systolic_mean, diastolic_mean; hypertension_rate based on ≥140/90.\n- HbA1c → report mean %, 1 decimal place; flag >6.5% as elevated.\n- Medicine mapping → metformin→biguanide; insulin→insulin; semaglutide/liraglutide→GLP-1 RA;\n  empagliflozin/canagliflozin/dapagliflozin→SGLT2i; sitagliptin/linagliptin→DPP-4i;\n  pioglitazone→TZD; glipizide/glyburide→sulfonylurea.\n- Visit cadence → must be in allowed set.\n- Ensure gender split ≈100%; otherwise flag.\nReturn only JSON (no prose) as normalized CityObservation."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_qa_reviewer",
      "name": "qa_reviewer",
      "kind": "LLM",
      "position": {
        "x": 1940,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are a strict QA reviewer.\nValidate schema adherence, numeric ranges, enums, and that each non-null field has:\n- A source URL, and\n- A ≤35-word direct quote.\nOutput only JSON (no prose)."
          },
          {
            "type": "user",
            "text": "Validate CityObservation.\nCheck numeric ranges, enums, required provenance for every non-null field.\nOutput **only JSON** (no prose):\n{\n  \"valid\": true | false,\n  \"issues\": [\n    {\"field\": \"...\", \"problem\": \"...\", \"suggested_fix\": \"...\"}\n  ]\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_comparator",
      "name": "comparator",
      "kind": "LLM",
      "position": {
        "x": 2460,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "Given a list of normalized CityObservation objects, compute cross-city aggregates:\n- Weighted means (n_patients) for continuous variables (age, BMI, BP, HbA1c).\n- Proportions for categorical (gender, visit cadence, meds).\n- Aggregate outcomes: pooled insulin initiation rate, mean time-to-insulin, readmission rates.\n- Report variability (SD or IQR if divergent).\n\nReturn **only JSON** as CrossCitySummary."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_dag_builder",
      "name": "dag_builder",
      "kind": "LLM",
      "position": {
        "x": 2980,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "You are assisting with causal design for an observational diabetes study.\nGiven a treatment/exposure, outcome, and candidate covariates, produce:\n- A causal DAG (nodes & directed edges)\n- A minimal sufficient adjustment set for the average treatment effect\n- Mermaid code for the DAG\n- Brief notes on key assumptions and potential violations\n\nConstraints:\n- Output ONLY JSON (no prose).\n- Use concise, lower_snake_case node names.\n- Prefer confounders (cause of both treatment & outcome) in the adjustment set; do NOT include colliders/mediators.\n\nInputs:\n- treatment: {{ treatment }}\n- outcome: {{ outcome }}\n- covariate_candidates: {{ covariate_candidates }}\n\nReturn JSON exactly with keys:\n{\n  \"nodes\": [\"treatment\", \"outcome\", \"age\", \"sex\", \"bmi\", \"blood_pressure\", \"hba1c\", \"sdoh\", \"site\"],\n  \"edges\": [{\"source\": \"age\", \"target\": \"treatment\"}, {\"source\": \"age\", \"target\": \"outcome\"}],\n  \"minimal_adjustment_set\": [\"age\", \"sex\", \"bmi\", \"blood_pressure\", \"hba1c\", \"sdoh\", \"site\"],\n  \"mermaid\": \"flowchart LR; age-->treatment; age-->outcome; ...\",\n  \"assumptions\": \"short notes on unmeasured confounding, measurement error, positivity\"\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_sap_generator",
      "name": "sap_generator",
      "kind": "LLM",
      "position": {
        "x": 3500,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "You are generating a Statistical Analysis Plan (SAP) for an observational diabetes study.\n\nUse the inputs below to produce a concise, journal-ready SAP in Markdown:\n- Align covariate adjustment with the DAG-derived minimal adjustment set.\n- Specify primary/secondary outcomes, time windows, inclusion/exclusion, index date.\n- Define models (logistic/ordinal/linear; Cox/AFT for survival; competing risks if applicable).\n- Address missing data (MICE), diagnostics, sensitivity analyses, multiplicity control.\n- Include site effects (random/fixed) if multiple hospitals.\n- State causal estimand, assumptions, and limitations.\n\nInputs (JSON):\n- estimand: {{ estimand_json }}\n- minimal_adjustment_set: {{ adjustment_json }}\n- cross_city_summary: {{ cross_city_summary }}\n\nOutput: ONLY Markdown, no extra commentary. Structure:\n\n# Statistical Analysis Plan\n\n## Objective & Estimand\n- Target effect (ATE/ATT): ...\n- Treatment: ...\n- Outcome: ...\n\n## Population & Cohort Construction\n- Inclusion / Exclusion\n- Index date definition\n- Follow-up window, censoring rules\n\n## Variables\n- Treatment definition and coding\n- Outcomes (primary/secondary) and measurement windows\n- Covariates (from DAG minimal adjustment set): list and how measured\n- Time-varying covariates if used\n\n## Models\n- Descriptive table shells\n- Regression models (formulas)\n- Survival models (Cox/AFT; frailty/random effects for site; competing risks if applicable)\n- Longitudinal/joint models if HbA1c trajectories are modeled\n\n## Missing Data\n- Mechanism assessment (MCAR/MAR/MNAR)\n- Imputation strategy (MICE): variables, iterations, diagnostics\n\n## Causal Inference Strategy\n- Propensity score model specification\n- Matching/stratification/overlap weighting\n- Diagnostics (SMD < 0.1; love plot)\n- MSM/IPTW if time-varying treatment/confounding\n\n## Sensitivity & Robustness\n- Alternative PS specs, trimming/overlap, E-values, leave-one-site-out\n- Unmeasured confounding discussion (DAG-based)\n\n## Multiplicity & Subgroups\n- Adjustment (BH/BY) for multiple comparisons\n- Pre-specified subgroup analyses (e.g., age bands, BMI class, sex)\n\n## Validation\n- Temporal split and external validation\n- Calibration and discrimination metrics\n\n## Reporting\n- STROBE/TRIPOD checklist references\n- Reproducibility (session info, code, seeds)\n\n## Limitations\n- Biases, measurement error, generalizability"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_power_calc",
      "name": "power_calc",
      "kind": "LLM",
      "position": {
        "x": 4020,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "You are a biostatistician tasked with reviewing study power/sample size.\nGiven study assumptions (alpha, effect size, sample size, allocation ratio, endpoint),\nestimate whether the study is adequately powered.\n\nIf exact numbers are missing, provide ranges (underpowered / borderline / adequately powered)\nwith reasoning.\n\nRespond with JSON:\n{\n  \"powered\": true | false | \"uncertain\",\n  \"assumptions\": {\"alpha\": ..., \"power\": ..., \"effect_size\": \"...\", \"n\": ...},\n  \"comment\": \"short explanation\"\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_robustness_planner",
      "name": "robustness_planner",
      "kind": "LLM",
      "position": {
        "x": 4540,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "You are drafting a Robustness & Sensitivity Analysis Plan for an observational diabetes study.\n\nUse the inputs to produce a concise, pre-registered style plan. Include:\n- Propensity score (PS) variants: logistic/balanced GBM, gradient boosted trees; variable sets:\n  - Minimal adjustment set from DAG\n  - Minimal + clinical (HbA1c, BP)\n  - Maximal (all available baseline covariates)\n- Weighting & matching: IPTW (stabilized), overlap weighting, 1:1 caliper matching (0.2 SD of logit PS)\n- Trimming: PS outside [0.01, 0.99] and [0.05, 0.95]\n- Model specs: primary (Cox PH), alternatives (AFT log-normal, flexible parametric), frailty for site\n- Diagnostics: SMD < 0.1, effective sample size, positivity check histograms, covariate balance over time\n- Leave-one-site-out and time-split sensitivity\n- E-values for the primary effect (to be computed separately)\n- Reporting: table shells for balance, weighted HR/OR, heterogeneity by site, forest plot layout\n\nInputs (JSON):\n- estimand: {{ estimand_json }}\n- adjustment_set: {{ adjustment_json }}\n- cross_city_summary: {{ cross_city_summary }}\n\nOutput JSON only:\n{\n  \"analyses\": [\n    {\"label\": \"...\", \"type\": \"ps_weighting|matching|model_alt|trimming|loo_site|split_time\", \"spec\": {...}}\n  ],\n  \"diagnostics\": [\"smd_threshold:0.1\", \"overlap_hist\", \"ess\", \"positivity_check\"],\n  \"reporting\": [\"balance_table\", \"effect_table\", \"forest_plot\"]\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_evalue_calculator",
      "name": "evalue_calculator",
      "kind": "LLM",
      "position": {
        "x": 5060,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "Calculate E-values and sensitivity thresholds from robustness analysis results. Output JSON format with E-value estimates and interpretations."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_diagnostics_planner",
      "name": "diagnostics_planner",
      "kind": "LLM",
      "position": {
        "x": 5580,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "You are drafting diagnostics assets for an observational diabetes study.\n\nGoal: produce JSON with table shells and plot specifications to be used later when results are available.\nBase them on:\n- Minimal adjustment set from DAG\n- Robustness plan (PS variants, weights, trimming)\n- Cross-city summary (sites)\n- Power plan (if relevant to reporting)\n\nInputs (JSON):\n- estimand: {{ estimand_json }}\n- adjustment_set: {{ adjustment_json }}\n- cross_city_summary: {{ cross_city_summary }}\n- robustness_plan: {{ robustness_json }}\n\nRules:\n- Tables: define columns (name, type, description), sorting, and any stratifications (by site, subgroup).\n- Plots: specify type (histogram, density, ridge, forest, love plot/balance), aesthetics (x, y, group, weight), small-multiples by site if useful, and caption text.\n- Include placeholders for file names where rendered figures will be saved later (e.g., \"fig_overlap_hist.png\").\n\nRespond with JSON only:\n{\n  \"tables\": [\n    {\n      \"id\": \"tbl_balance_primary\",\n      \"title\": \"Covariate Balance (Primary PS Weighting)\",\n      \"columns\": [\n        {\"name\": \"covariate\", \"type\": \"string\"},\n        {\"name\": \"SMD_unweighted\", \"type\": \"float\"},\n        {\"name\": \"SMD_weighted\", \"type\": \"float\"},\n        {\"name\": \"threshold_0_1_flag\", \"type\": \"bool\"}\n      ],\n      \"grouping\": {\"by\": \"covariate_class\", \"allowed\": [\"demographic\",\"clinical\",\"sdoh\",\"site\"]},\n      \"notes\": \"Threshold SMD < 0.1 for acceptable balance.\"\n    }\n  ],\n  \"plots\": [\n    {\n      \"id\": \"fig_overlap_hist\",\n      \"title\": \"Propensity Score Overlap\",\n      \"type\": \"histogram\",\n      \"aesthetics\": {\"x\": \"ps\", \"group\": \"treatment\", \"weight\": \"iptw\"},\n      \"bins\": 40,\n      \"by_site\": true,\n      \"filename\": \"fig_overlap_hist.png\",\n      \"caption\": \"Overlap of estimated PS by treatment; weighted by stabilized IPTW.\"\n    }\n  ]\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_asset_renderer",
      "name": "asset_renderer",
      "kind": "LLM",
      "position": {
        "x": 6100,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "Generate rendering specifications for figures and tables from diagnostics plan. Output JSON with detailed rendering instructions."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_factor_extractor",
      "name": "factor_extractor",
      "kind": "LLM",
      "position": {
        "x": 6620,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "From CrossCitySummary JSON, list common factors and rationale bullets.\nAdd confidence (High/Med/Low) based on data completeness and consistency.\nReturn only JSON (no prose) if you emit structured output; otherwise concise bullets."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_correlator",
      "name": "correlator",
      "kind": "LLM",
      "position": {
        "x": 7140,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "Analyze correlations between demographics and treatment patterns:\n\n- Age groups vs. medicine usage\n- Gender vs. visit frequency or medicine choice\n- BMI vs. medication class\n- Blood pressure vs. insulin initiation or visit frequency\n- HbA1c vs. visit frequency or medication class\n\nFor each relationship, report:\n- variables: list of predictors and outcome\n- direction: positive | negative | none\n- evidence: numeric example (means, proportions, hazard ratio proxy)\n- confidence: High | Medium | Low\n- interpretation: clinical or behavioral rationale\n\nUsing the aggregated CrossCitySummary JSON:\n{{ cross_city_summary }}\n\nReturn **only JSON**:\n{\n  \"correlations\": [\n    {\n      \"variables\": [\"BMI_obese\", \"insulin_use\"],\n      \"direction\": \"positive\",\n      \"evidence\": \"Obese patients had 48% insulin initiation vs 22% in normal BMI\",\n      \"confidence\": \"High\",\n      \"interpretation\": \"Obesity strongly correlates with insulin usage.\"\n    }\n  ]\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_survival",
      "name": "survival",
      "kind": "LLM",
      "position": {
        "x": 7660,
        "y": 80
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are an epidemiology analyst. Given normalized observations:\n- Compute cross-city aggregates.\n- Identify common factors and treatment patterns.\n- Provide concise tables, bullet insights with effect directions.\n- Include confidence levels (High/Med/Low) and explicit limitations."
          },
          {
            "type": "user",
            "text": "Perform a survival-style analysis using time-to-event data from CityObservation\n(e.g., time-to-insulin initiation, readmission).\n\nTasks:\n- Estimate median survival times per subgroup (e.g., by BMI band, BP category).\n- Compare survival curves qualitatively (earlier vs later insulin initiation).\n- Note censoring if data incomplete.\n\nUsing the aggregated CrossCitySummary JSON:\n{{ cross_city_summary }}\n\nReturn **only JSON**:\n{\n  \"survival_analysis\": [\n    {\n      \"event\": \"time_to_insulin\",\n      \"groups\": {\n        \"BMI_normal\": {\"median_months\": 36},\n        \"BMI_obese\": {\"median_months\": 20}\n      },\n      \"interpretation\": \"Obese patients progress to insulin earlier.\"\n    }\n  ]\n}"
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    },
    {
      "id": "t_reporter",
      "name": "reporter",
      "kind": "LLM",
      "position": {
        "x": 120,
        "y": 200
      },
      "LlmTemplate": {
        "messages": [
          {
            "type": "system",
            "text": "You are a clear technical editor.\nProduce a polished academic-style summary with tables and an appendix of sources.\nGround all claims only in validated data."
          },
          {
            "type": "user",
            "text": "Produce a structured academic-style report:\n\n1. Abstract — objective and key findings\n2. Methods — data sources, extraction, normalization, analysis (correlation, regression, survival if available)\n3. Results —\n   - Demographics (age, gender, BMI, BP, HbA1c)\n   - Treatments (medication usage, visit cadence)\n   - Correlation results (effect directions, numeric evidence)\n   - Survival analysis if present\n4. Discussion — interpretation, clinical implications, limitations\n5. References — per-city source URLs\n\nFormat in Markdown with tables where appropriate."
          }
        ]
      },
      "LlmVars": {},
      "LlmOptions": {
        "temperature": 0
      },
      "Stream": false
    }
  ],
  "arcs": [
    {
      "id": "a_city_collector_in",
      "sourceId": "p_city_collector",
      "targetId": "t_city_collector",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_fetch_out",
      "sourceId": "t_city_collector",
      "targetId": "p_fetch_and_extract",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_fetch_in",
      "sourceId": "p_fetch_and_extract",
      "targetId": "t_fetch_and_extract",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_normalizer_out",
      "sourceId": "t_fetch_and_extract",
      "targetId": "p_normalizer",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_normalizer_in",
      "sourceId": "p_normalizer",
      "targetId": "t_normalizer",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_qa_out",
      "sourceId": "t_normalizer",
      "targetId": "p_qa_reviewer",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_qa_in",
      "sourceId": "p_qa_reviewer",
      "targetId": "t_qa_reviewer",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_comparator_out",
      "sourceId": "t_qa_reviewer",
      "targetId": "p_comparator",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_comparator_in",
      "sourceId": "p_comparator",
      "targetId": "t_comparator",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_dag_out",
      "sourceId": "t_comparator",
      "targetId": "p_dag_builder",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_dag_in",
      "sourceId": "p_dag_builder",
      "targetId": "t_dag_builder",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_sap_out",
      "sourceId": "t_dag_builder",
      "targetId": "p_sap_generator",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_sap_in",
      "sourceId": "p_sap_generator",
      "targetId": "t_sap_generator",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_power_out",
      "sourceId": "t_sap_generator",
      "targetId": "p_power_calc",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_power_in",
      "sourceId": "p_power_calc",
      "targetId": "t_power_calc",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_robustness_out",
      "sourceId": "t_power_calc",
      "targetId": "p_robustness_planner",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_robustness_in",
      "sourceId": "p_robustness_planner",
      "targetId": "t_robustness_planner",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_evalue_out",
      "sourceId": "t_robustness_planner",
      "targetId": "p_evalue_calculator",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_evalue_in",
      "sourceId": "p_evalue_calculator",
      "targetId": "t_evalue_calculator",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_diagnostics_out",
      "sourceId": "t_evalue_calculator",
      "targetId": "p_diagnostics_planner",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_diagnostics_in",
      "sourceId": "p_diagnostics_planner",
      "targetId": "t_diagnostics_planner",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_asset_out",
      "sourceId": "t_diagnostics_planner",
      "targetId": "p_asset_renderer",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_asset_in",
      "sourceId": "p_asset_renderer",
      "targetId": "t_asset_renderer",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_factor_out",
      "sourceId": "t_asset_renderer",
      "targetId": "p_factor_extractor",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_factor_in",
      "sourceId": "p_factor_extractor",
      "targetId": "t_factor_extractor",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_correlator_out",
      "sourceId": "t_factor_extractor",
      "targetId": "p_correlator",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_correlator_in",
      "sourceId": "p_correlator",
      "targetId": "t_correlator",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_survival_out",
      "sourceId": "t_correlator",
      "targetId": "p_survival",
      "expression": "token",
      "direction": "OUT"
    },
    {
      "id": "a_survival_in",
      "sourceId": "p_survival",
      "targetId": "t_survival",
      "expression": "token",
      "direction": "IN"
    },
    {
      "id": "a_reporter_out",
      "sourceId": "t_survival",
      "targetId": "p_reporter",
      "expression": "token",
      "direction": "OUT"
    }
  ],
  "endPlaces": [
    "p_reporter"
  ],
  "initialMarking": {
    "city_collector": [
      {
        "value": "# Diabetes Study Research Request\n\n## Objective\nInitiate comprehensive research on diabetes treatment patterns across multiple cities.\n\n## Parameters\n- **Cities**: Multiple metropolitan areas\n- **Year Range**: 2020-2024\n- **Focus Areas**:\n  - Patient demographics (age, gender, BMI, blood pressure)\n  - Medication patterns and classes\n  - Healthcare visit frequency\n  - Treatment outcomes\n\n## Data Sources Priority\n1. Government health departments (.gov)\n2. Academic institutions (.edu)\n3. CDC/ADA official reports\n4. State health department publications\n5. Major hospital system reports\n6. Peer-reviewed medical literature\n\n## Expected Deliverables\n- Structured data extraction\n- Cross-city comparative analysis\n- Statistical analysis plan\n- Comprehensive research report\n\nBegin with city_collector phase to identify credible data sources.",
        "timestamp": 0
      }
    ]
  },
  "subWorkflows": []
}